{"ast":null,"code":"import{formatDate}from'../helpers';import{Header}from'../Components/Header';import React,{useState,useEffect}from'react';import{Link,redirect,useParams}from'react-router-dom';import{getNoteById,deleteNote,editNoteById}from'../helpers';import{ReactComponent as ArrowLeft}from'../Assets/arrow-left.svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const NotePage=_ref=>{let{props}=_ref;const{id}=useParams();const[singNote,setSingleNote]=useState(null);const[noteChange,setNoteChange]=useState(false);const[initialNote,setInitialNote]=useState(\"\");useEffect(()=>{getInitialData();},[]);useEffect(()=>{setNoteChange(initialNote!==(singNote===null||singNote===void 0?void 0:singNote.note_body));},[singNote]);const getInitialData=async()=>{const noteData=await getNoteById(id);!noteData.hasOwnProperty('error')&&setSingleNote(noteData);!noteData.hasOwnProperty('error')&&setInitialNote(noteData===null||noteData===void 0?void 0:noteData.note_body);};const onNoteChange=e=>{const updatedNote=e.target.value;setSingleNote({...singNote,note_body:updatedNote});};const temp=async()=>{if(noteChange){await editNoteById(singNote===null||singNote===void 0?void 0:singNote.id,singNote===null||singNote===void 0?void 0:singNote.note_body);}};const showData=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"note-meta-data\",children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Note Number : \",singNote===null||singNote===void 0?void 0:singNote.id]}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Created At : \",formatDate(singNote===null||singNote===void 0?void 0:singNote.created_at)]}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Updated At : \",formatDate(singNote===null||singNote===void 0?void 0:singNote.updated_at)]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"textarea\",{defaultValue:singNote===null||singNote===void 0?void 0:singNote.note_body,onChange:onNoteChange})]});};const onDeleteNote=async()=>{const resp=await deleteNote(singNote===null||singNote===void 0?void 0:singNote.id);};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(ArrowLeft,{onClick:temp})})}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onDeleteNote,children:\"Delete\"})})]}),!!singNote?showData():/*#__PURE__*/_jsx(\"h1\",{children:\"No Note Found\"})]});};","map":{"version":3,"names":["formatDate","Header","React","useState","useEffect","Link","redirect","useParams","getNoteById","deleteNote","editNoteById","ReactComponent","ArrowLeft","jsx","_jsx","jsxs","_jsxs","NotePage","_ref","props","id","singNote","setSingleNote","noteChange","setNoteChange","initialNote","setInitialNote","getInitialData","note_body","noteData","hasOwnProperty","onNoteChange","e","updatedNote","target","value","temp","showData","className","children","created_at","updated_at","defaultValue","onChange","onDeleteNote","resp","to","onClick"],"sources":["/Users/shreyaskulkarni/Desktop/projects/notes/mynotes/frontend/src/Pages/NotePage.js"],"sourcesContent":["import { formatDate } from '../helpers';\nimport { Header } from '../Components/Header';\nimport React, { useState, useEffect } from 'react'\nimport { Link, redirect, useParams } from 'react-router-dom';\nimport { getNoteById, deleteNote, editNoteById } from '../helpers';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg'\n\nexport const NotePage = ({ props }) => {\n\n  const { id } = useParams();\n  const [singNote, setSingleNote] = useState(null);\n  const [noteChange, setNoteChange] = useState(false);\n  const [initialNote, setInitialNote] = useState(\"\");\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  useEffect(() => {\n    setNoteChange(initialNote !== singNote?.note_body);\n  }, [singNote])\n\n  const getInitialData = async () => {\n    const noteData = await getNoteById(id)\n    !noteData.hasOwnProperty('error') && setSingleNote(noteData);\n    !noteData.hasOwnProperty('error') && setInitialNote(noteData?.note_body);\n  }\n\n  const onNoteChange = (e) => {\n    const updatedNote = e.target.value;\n    setSingleNote({ ...singNote, note_body: updatedNote });\n  }\n\n  const temp = async () => {\n    if (noteChange) {\n      await editNoteById(singNote?.id, singNote?.note_body);\n    }\n  }\n\n  const showData = () => {\n    return (\n      <div className='note-meta-data'>\n        <hr />\n        <h1>Note Number : {singNote?.id}</h1>\n        <h1>Created At : {formatDate(singNote?.created_at)}</h1>\n        <h1>Updated At : {formatDate(singNote?.updated_at)}</h1>\n        <hr />\n        <textarea defaultValue={singNote?.note_body} onChange={onNoteChange}></textarea>\n      </div>\n    )\n  }\n\n  const onDeleteNote = async () => {\n    const resp = await deleteNote(singNote?.id);\n  }\n\n  return (\n    <div className='note'>\n      <Header />\n      <div className='note-header'>\n        <h3>\n          <Link to=\"/\">\n            <ArrowLeft onClick={temp} />\n          </Link>\n        </h3>\n        <Link to=\"/\">\n          <button onClick={onDeleteNote}>\n            Delete\n          </button>\n        </Link>\n      </div>\n      {!!singNote ? showData() : <h1>No Note Found</h1>}\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}