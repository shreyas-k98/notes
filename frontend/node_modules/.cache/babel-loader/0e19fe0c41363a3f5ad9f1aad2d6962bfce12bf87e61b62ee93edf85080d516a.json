{"ast":null,"code":"var _jsxFileName = \"/Users/shreyaskulkarni/Desktop/projects/notes/frontend/src/Pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport { formatDate } from '../helpers';\nimport { getNoteById } from '../helpers';\nimport { Header } from '../Components/Header';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotePage = ({\n  props\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [singNote, setSingleNote] = useState(null);\n  const [noteChange, setNoteChange] = useState(false);\n  let initialNoteData = '';\n  useEffect(() => {\n    getInitialData();\n  }, []);\n  useEffect(() => {\n    if (initialNoteData !== singNote) {\n      setNoteChange(true);\n    }\n  }, [singNote]);\n  const getInitialData = async () => {\n    const noteData = await getNoteById(id);\n    !noteData.hasOwnProperty('error') && setSingleNote(noteData);\n    initialNoteData = noteData.note_body;\n  };\n  const onNoteChange = e => {\n    const updatedNote = e.target.value;\n    setSingleNote({\n      ...singNote,\n      note_body: updatedNote\n    });\n  };\n  const temp = () => {\n    debugger;\n  };\n  const showData = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: singNote === null || singNote === void 0 ? void 0 : singNote.note_body,\n        onChange: onNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: () => {\n              console.log(\"updated: \", noteChange);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !!singNote ? showData() : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Note Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"REgz0zUpJIExyHRZHzwEZw79dyY=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["formatDate","getNoteById","Header","React","useState","useEffect","Link","useParams","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","props","_s","id","singNote","setSingleNote","noteChange","setNoteChange","initialNoteData","getInitialData","noteData","hasOwnProperty","note_body","onNoteChange","e","updatedNote","target","value","temp","showData","children","defaultValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","to","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/shreyaskulkarni/Desktop/projects/notes/frontend/src/Pages/NotePage.js"],"sourcesContent":["import { formatDate } from '../helpers';\nimport { getNoteById } from '../helpers';\nimport { Header } from '../Components/Header';\nimport React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg'\n\nexport const NotePage = ({ props }) => {\n\n  const { id } = useParams();\n  const [singNote, setSingleNote] = useState(null);\n  const [noteChange, setNoteChange] = useState(false);\n  let initialNoteData = '';\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  useEffect(() => {\n    if (initialNoteData !== singNote) {\n      setNoteChange(true);\n    }\n  }, [singNote])\n\n  const getInitialData = async () => {\n    const noteData = await getNoteById(id)\n    !noteData.hasOwnProperty('error') && setSingleNote(noteData);\n    initialNoteData = noteData.note_body;\n  }\n\n  const onNoteChange = (e) => {\n    const updatedNote = e.target.value;\n    setSingleNote({ ...singNote, note_body: updatedNote });\n  }\n\n  const temp = () => {\n    debugger\n  }\n\n  const showData = () => {\n    return (\n      <div>\n        {/* <h1>Note Id : {singNote?.id}</h1> */}\n        <textarea defaultValue={singNote?.note_body} onChange={onNoteChange}></textarea>\n        {/* <h1>Created At : {formatDate(singNote?.created_at)}</h1>\n        <h1>Updated At : {formatDate(singNote?.updated_at)}</h1> */}\n      </div>\n    )\n  }\n\n  return (\n    <div className='note'>\n      <Header />\n      <div className='note-header'>\n        <h3>\n          <Link to=\"/\">\n            <ArrowLeft onClick={() => { console.log(\"updated: \", noteChange) }} />\n          </Link>\n        </h3>\n      </div>\n      {!!singNote ? showData() : <h1>No Note Found</h1>}\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}