{"ast":null,"code":"var _jsxFileName = \"/Users/shreyaskulkarni/Desktop/projects/notes/mynotes/frontend/src/Pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport { formatDate } from '../helpers';\nimport { Header } from '../Components/Header';\nimport React, { useState, useEffect } from 'react';\nimport { Link, redirect, useParams } from 'react-router-dom';\nimport { getNoteById, deleteNote, editNoteById } from '../helpers';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotePage = ({\n  props\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [singNote, setSingleNote] = useState(null);\n  const [noteChange, setNoteChange] = useState(false);\n  const [initialNote, setInitialNote] = useState(\"\");\n  useEffect(() => {\n    getInitialData();\n  }, []);\n  useEffect(() => {\n    setNoteChange(initialNote !== (singNote === null || singNote === void 0 ? void 0 : singNote.note_body));\n  }, [singNote]);\n  const getInitialData = async () => {\n    const noteData = await getNoteById(id);\n    !noteData.hasOwnProperty('error') && setSingleNote(noteData);\n    !noteData.hasOwnProperty('error') && setInitialNote(noteData === null || noteData === void 0 ? void 0 : noteData.note_body);\n  };\n  const onNoteChange = e => {\n    const updatedNote = e.target.value;\n    setSingleNote({\n      ...singNote,\n      note_body: updatedNote\n    });\n  };\n  const temp = async () => {\n    if (noteChange) {\n      await editNoteById(singNote === null || singNote === void 0 ? void 0 : singNote.id, singNote === null || singNote === void 0 ? void 0 : singNote.note_body);\n    }\n  };\n  const showData = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-meta-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Note Number : \", singNote === null || singNote === void 0 ? void 0 : singNote.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Created At : \", formatDate(singNote === null || singNote === void 0 ? void 0 : singNote.created_at)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Updated At : \", formatDate(singNote === null || singNote === void 0 ? void 0 : singNote.updated_at)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: singNote === null || singNote === void 0 ? void 0 : singNote.note_body,\n        onChange: onNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  const onDeleteNote = async () => {\n    const resp = await deleteNote(singNote === null || singNote === void 0 ? void 0 : singNote.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleteNote,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), !!singNote ? showData() : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Note Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"qLZ3yVr8D/SPKIVlz17MsH1d58k=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["formatDate","Header","React","useState","useEffect","Link","redirect","useParams","getNoteById","deleteNote","editNoteById","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","props","_s","id","singNote","setSingleNote","noteChange","setNoteChange","initialNote","setInitialNote","getInitialData","note_body","noteData","hasOwnProperty","onNoteChange","e","updatedNote","target","value","temp","showData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","created_at","updated_at","defaultValue","onChange","onDeleteNote","resp","to","onClick","_c","$RefreshReg$"],"sources":["/Users/shreyaskulkarni/Desktop/projects/notes/mynotes/frontend/src/Pages/NotePage.js"],"sourcesContent":["import { formatDate } from '../helpers';\nimport { Header } from '../Components/Header';\nimport React, { useState, useEffect } from 'react'\nimport { Link, redirect, useParams } from 'react-router-dom';\nimport { getNoteById, deleteNote, editNoteById } from '../helpers';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg'\n\nexport const NotePage = ({ props }) => {\n\n  const { id } = useParams();\n  const [singNote, setSingleNote] = useState(null);\n  const [noteChange, setNoteChange] = useState(false);\n  const [initialNote, setInitialNote] = useState(\"\");\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  useEffect(() => {\n    setNoteChange(initialNote !== singNote?.note_body);\n  }, [singNote])\n\n  const getInitialData = async () => {\n    const noteData = await getNoteById(id)\n    !noteData.hasOwnProperty('error') && setSingleNote(noteData);\n    !noteData.hasOwnProperty('error') && setInitialNote(noteData?.note_body);\n  }\n\n  const onNoteChange = (e) => {\n    const updatedNote = e.target.value;\n    setSingleNote({ ...singNote, note_body: updatedNote });\n  }\n\n  const temp = async () => {\n    if (noteChange) {\n      await editNoteById(singNote?.id, singNote?.note_body);\n    }\n  }\n\n  const showData = () => {\n    return (\n      <div className='note-meta-data'>\n        <hr />\n        <h1>Note Number : {singNote?.id}</h1>\n        <h1>Created At : {formatDate(singNote?.created_at)}</h1>\n        <h1>Updated At : {formatDate(singNote?.updated_at)}</h1>\n        <hr />\n        <textarea defaultValue={singNote?.note_body} onChange={onNoteChange}></textarea>\n      </div>\n    )\n  }\n\n  const onDeleteNote = async () => {\n    const resp = await deleteNote(singNote?.id);\n  }\n\n  return (\n    <div className='note'>\n      <Header />\n      <div className='note-header'>\n        <h3>\n          <Link to=\"/\">\n            <ArrowLeft onClick={temp} />\n          </Link>\n        </h3>\n        <Link to=\"/\">\n          <button onClick={onDeleteNote}>\n            Delete\n          </button>\n        </Link>\n      </div>\n      {!!singNote ? showData() : <h1>No Note Found</h1>}\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}